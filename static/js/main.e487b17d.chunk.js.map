{"version":3,"sources":["components/Odds.jsx","App.js","index.js","reducer.js"],"names":["cell","d","dindex","x","y","row","p","index","label","values","map","shuffle","a","j","i","length","Math","floor","random","tooltip","y0","total","round","toString","Odds","props","state","deck","clerics","rogues","warriors","wizards","handleInputChange","bind","event","target","value","name","this","setState","parseInt","data","s","b","c","isNaN","partyByDraw","Array","fill","t","firsts","v","indexOf","filter","party","includes","count","calculate","html-for","className","type","id","min","defaultValue","onChange","width","height","tooltipHtml","margin","top","bottom","left","right","React","Component","App","store","createStore","action","render","document","getElementById"],"mappings":"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","file":"static/js/main.e487b17d.chunk.js","sourcesContent":["import React from 'react';\nimport { BarChart } from 'react-d3-components';\n\nfunction cell(d, dindex) {\n  return {x: \"\" + (dindex+1), y: d};\n}\n\nfunction row(p, index) {\n  return {\n    label: \"\" + index,\n    values: p.map(cell)\n  };\n}\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n  }\n  return a;\n}\n\nfunction calculate(s, a, b, c, d) {\n  if (a == null || isNaN(a)) {\n    a = 0;\n  }\n  if (b == null || isNaN(b)) {\n    b = 0;\n  }\n  if (c == null || isNaN(c)) {\n    c = 0;\n  }\n  if (d == null || isNaN(d)) {\n    d = 0;\n  }\n  if (s == null || isNaN(s) || s < a+b+c+d) {\n    s = a+b+c+d;\n  }\n  let partyByDraw = Array(5).fill(0).map(x => Array(s).fill(0));\n  let deck = new Array(s);\n  deck.fill(\"Z\");\n  deck.fill(\"A\", 0, a);\n  deck.fill(\"B\", a, a+b);\n  deck.fill(\"C\", a+b, a+b+c);\n  deck.fill(\"D\", a+b+c, a+b+c+d);\n  const trials = 100000;\n  for (var t = 0; t < trials; t++) {\n    shuffle(deck);\n    var firsts = [\"A\", \"B\", \"C\", \"D\"].map(v => deck.indexOf(v))\n    firsts.filter(v => v !== -1);\n    var party = 0;\n    for (var i = 0; i < s; i++) {\n      if (firsts.includes(i)) {\n        party += 1;\n      }\n      partyByDraw[party][i] += 1;\n    }\n  }\n  return partyByDraw.map(row => row.map(count => count / trials * 100));\n}\n\nfunction tooltip (x, y0, y, total) {\n      return (Math.round(y*10)/10).toString() + \"%\";\n}\n\nexport default class Odds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: 40,\n      clerics: 4,\n      rogues: 3,\n      warriors: 2,\n      wizards: 1\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: parseInt(value)\n    });\n  }\n\n  render() {\n    const partyByDraw = calculate(this.state.deck, this.state.clerics, this.state.rogues, this.state.warriors, this.state.wizards);\n    var data = partyByDraw.map(row);\n    return <div>\n      <div>\n        <label html-for=\"deck\"> Cards in deck: <input className=\"numbox\" type=\"number\" id=\"deck\" name=\"deck\" min=\"0\" defaultValue=\"40\" onChange={this.handleInputChange} /></label>\n        <label html-for=\"clerics\"> Clerics: <input className=\"numbox\" type=\"number\" id=\"clerics\" name=\"clerics\" min=\"0\" defaultValue=\"4\" onChange={this.handleInputChange} /></label>\n        <label html-for=\"rogues\"> Rogues: <input className=\"numbox\" type=\"number\" id=\"rogues\" name=\"rogues\" min=\"0\" defaultValue=\"3\" onChange={this.handleInputChange} /></label>\n        <label html-for=\"warriors\"> Warriors: <input className=\"numbox\" type=\"number\" id=\"warriors\" name=\"warriors\" min=\"0\" defaultValue=\"2\" onChange={this.handleInputChange} /></label>\n        <label html-for=\"wizards\"> Wizards: <input className=\"numbox\" type=\"number\" id=\"wizards\" name=\"wizards\" min=\"0\" defaultValue=\"1\" onChange={this.handleInputChange} /></label>\n      </div>\n      <BarChart\n              data={data}\n              width={1500}\n              height={400}\n              tooltipHtml={tooltip}\n              margin={{top: 10, bottom: 50, left: 50, right: 10}}/>\n    </div>;\n  }\n}","import React from 'react';\nimport './App.css';\nimport Odds from './components/Odds';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Odds />\n      </header> \n    </div>\n  );\n        // <label for=\"paragons\"> Paragons: <input class=\"paragons\" type=\"number\" id=\"paragons\" name=\"paragons\" min=\"0\" /></label>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer, {});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","export default function(state = {}, action) {\n  switch(action.type) {    \n  default:\n    return state;\n  }\n}"],"sourceRoot":""}