{"version":3,"sources":["components/Odds.jsx","App.js","index.js","reducer.js"],"names":["cell","d","dindex","x","y","row","p","index","label","values","map","shuffle","a","j","i","length","Math","floor","random","tooltip","y0","total","className","round","toString","Odds","props","state","deck","clerics","rogues","warriors","wizards","handleInputChange","bind","event","target","value","name","this","setState","parseInt","data","s","b","c","isNaN","partyByDraw","Array","fill","t","firsts","v","indexOf","filter","party","includes","count","calculate","html-for","type","id","min","defaultValue","onChange","width","height","tooltipHtml","tooltipOffset","top","left","yAxis","tickFormat","margin","bottom","right","style","React","Component","App","store","createStore","action","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd7ca4d9.chunk.js","sourcesContent":["import React from 'react';\nimport { BarChart } from 'react-d3-components';\nimport './Odds.css';\n\nfunction cell(d, dindex) {\n  return {x: \"\" + (dindex+1), y: d};\n}\n\nfunction row(p, index) {\n  return {\n    label: \"\" + index,\n    values: p.map(cell)\n  };\n}\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n  }\n  return a;\n}\n\nfunction calculate(s, a, b, c, d) {\n  if (a == null || isNaN(a)) {\n    a = 0;\n  }\n  if (b == null || isNaN(b)) {\n    b = 0;\n  }\n  if (c == null || isNaN(c)) {\n    c = 0;\n  }\n  if (d == null || isNaN(d)) {\n    d = 0;\n  }\n  if (s == null || isNaN(s) || s < a+b+c+d) {\n    s = a+b+c+d;\n  }\n  let partyByDraw = Array(5).fill(0).map(x => Array(s).fill(0));\n  let deck = new Array(s);\n  deck.fill(\"Z\");\n  deck.fill(\"A\", 0, a);\n  deck.fill(\"B\", a, a+b);\n  deck.fill(\"C\", a+b, a+b+c);\n  deck.fill(\"D\", a+b+c, a+b+c+d);\n  const trials = 100000;\n  for (var t = 0; t < trials; t++) {\n    shuffle(deck);\n    var firsts = [\"A\", \"B\", \"C\", \"D\"].map(v => deck.indexOf(v))\n    firsts.filter(v => v !== -1);\n    var party = 0;\n    for (var i = 0; i < s; i++) {\n      if (firsts.includes(i)) {\n        party += 1;\n      }\n      partyByDraw[party][i] += 1;\n    }\n  }\n  return partyByDraw.map(row => row.map(count => count / trials * 100));\n}\n\nfunction tooltip (x, y0, y, total) {\n      return <div className=\"tooltip\">{(Math.round(y*10)/10).toString() + \"%\"}</div>;\n}\n\nexport default class Odds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: 40,\n      clerics: 2,\n      rogues: 3,\n      warriors: 2,\n      wizards: 1\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: parseInt(value)\n    });\n  }\n\n  render() {\n    const partyByDraw = calculate(this.state.deck, this.state.clerics, this.state.rogues, this.state.warriors, this.state.wizards);\n    var data = partyByDraw.map(row);\n    return <div>\n      <div className=\"form\">\n        <label html-for=\"deck\"> Cards in deck: </label><input className=\"numbox\" type=\"number\" id=\"deck\" name=\"deck\" min=\"0\" defaultValue=\"40\" onChange={this.handleInputChange} />\n        <label html-for=\"clerics\"> Clerics: </label><input className=\"numbox\" type=\"number\" id=\"clerics\" name=\"clerics\" min=\"0\" defaultValue=\"2\" onChange={this.handleInputChange} />\n        <label html-for=\"rogues\"> Rogues: </label><input className=\"numbox\" type=\"number\" id=\"rogues\" name=\"rogues\" min=\"0\" defaultValue=\"3\" onChange={this.handleInputChange} />\n        <label html-for=\"warriors\"> Warriors: </label><input className=\"numbox\" type=\"number\" id=\"warriors\" name=\"warriors\" min=\"0\" defaultValue=\"2\" onChange={this.handleInputChange} />\n        <label html-for=\"wizards\"> Wizards: </label><input className=\"numbox\" type=\"number\" id=\"wizards\" name=\"wizards\" min=\"0\" defaultValue=\"1\" onChange={this.handleInputChange} />\n      </div>\n      <BarChart\n              data={data}\n              width={1500}\n              height={400}\n              tooltipHtml={tooltip}\n              tooltipOffset={{top: -50, left: 0}}\n              yAxis={{tickFormat: y => {return \"\"}}}\n              margin={{top: 10, bottom: 50, left: 50, right: 10}}/>\n      <div className=\"legend\">\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#1f77b4\"}} />\n          </svg> = Party of 0\n        </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#aec7e8\"}} />\n          </svg> = Party of 1\n        </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#ff7f0e\"}} />\n          </svg> = Party of 2\n          </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#ffbb78\"}} />\n          </svg> = Party of 3\n          </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#2ca02c\"}} />\n          </svg> = Party of 4\n        </div>\n      </div>\n    </div>;\n  }\n}","import React from 'react';\nimport './App.css';\nimport Odds from './components/Odds';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Odds />\n      </header> \n    </div>\n  );\n        // <label for=\"paragons\"> Paragons: <input class=\"paragons\" type=\"number\" id=\"paragons\" name=\"paragons\" min=\"0\" /></label>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer, {});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","export default function(state = {}, action) {\n  switch(action.type) {    \n  default:\n    return state;\n  }\n}"],"sourceRoot":""}