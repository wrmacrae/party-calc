{"version":3,"sources":["components/Odds.jsx","App.js","index.js","reducer.js"],"names":["cell","d","dindex","x","y","row","p","index","label","values","map","shuffle","a","j","i","length","Math","floor","random","tooltip","y0","total","className","round","toString","Odds","props","state","deck","clerics","rogues","warriors","wizards","paragons","haveparagons","handleInputChange","bind","handleClick","event","target","checked","name","this","setState","value","parseInt","data","s","b","c","ha","hb","hc","hd","hp","isNaN","partyByDraw","Array","fill","needs","startingParty","push","t","firsts","v","indexOf","filter","party","includes","count","calculate","haveclerics","haverogues","havewarriors","havewizards","html-for","type","id","min","defaultValue","onChange","width","height","tooltipHtml","tooltipOffset","top","left","yAxis","tickFormat","margin","bottom","right","style","onClick","React","Component","App","store","createStore","action","render","document","getElementById"],"mappings":"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","file":"static/js/main.c96e1fa5.chunk.js","sourcesContent":["import React from 'react';\nimport { BarChart } from 'react-d3-components';\nimport './Odds.css';\n\nfunction cell(d, dindex) {\n  return {x: \"\" + (dindex+1), y: d};\n}\n\nfunction row(p, index) {\n  return {\n    label: \"\" + index,\n    values: p.map(cell)\n  };\n}\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n  }\n  return a;\n}\n\nfunction calculate(s, a, b, c, d, p, ha, hb, hc, hd, hp) {\n  if (a == null || isNaN(a)) {\n    a = 0;\n  }\n  if (b == null || isNaN(b)) {\n    b = 0;\n  }\n  if (c == null || isNaN(c)) {\n    c = 0;\n  }\n  if (d == null || isNaN(d)) {\n    d = 0;\n  }\n  if (p == null || isNaN(p)) {\n    p = 0;\n  }\n  if (s == null || isNaN(s) || s < a+b+c+d+p) {\n    s = a+b+c+d+p;\n  }\n  let partyByDraw = Array(5).fill(0).map(x => Array(s).fill(0));\n  let deck = new Array(s);\n  deck.fill(\"Z\");\n  deck.fill(\"A\", 0, a);\n  deck.fill(\"B\", a, a+b);\n  deck.fill(\"C\", a+b, a+b+c);\n  deck.fill(\"D\", a+b+c, a+b+c+d);\n  deck.fill(\"P\", a+b+c+d, a+b+c+d+p)\n  var needs = []\n  var startingParty = 0\n  if (ha) {\n    startingParty += 1;\n  } else {\n    needs.push(\"A\");\n  }\n  if (hb) {\n    startingParty += 1;\n  } else {\n    needs.push(\"B\");\n  }\n  if (hc) {\n    startingParty += 1;\n  } else {\n    needs.push(\"C\");\n  }\n  if (hd) {\n    startingParty += 1;\n  } else {\n    needs.push(\"D\");\n  }\n  startingParty += hp;\n  const trials = 100000;\n  for (var t = 0; t < trials; t++) {\n    shuffle(deck);\n    var firsts = needs.map(v => deck.indexOf(v))\n    firsts.filter(v => v !== -1);\n    var party = startingParty;\n    for (var i = 0; i < s; i++) {\n      if (firsts.includes(i) || deck[i] === \"P\") {\n        party += 1;\n        if (party > 4) {\n          party = 4;\n        }\n      }\n      partyByDraw[party][i] += 1;\n    }\n  }\n  return partyByDraw.map(row => row.map(count => count / trials * 100));\n}\n\nfunction tooltip (x, y0, y, total) {\n      return <div className=\"tooltip\">{(Math.round(y*10)/10).toString() + \"%\"}</div>;\n}\n\nexport default class Odds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: 40,\n      clerics: 2,\n      rogues: 3,\n      warriors: 2,\n      wizards: 1,\n      paragons: 0,\n      haveparagons: 0\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const target = event.target;\n    const checked = target.checked;\n    const name = target.name;\n    this.setState({\n      [name]: checked\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: parseInt(value)\n    });\n  }\n\n  render() {\n    const partyByDraw = calculate(this.state.deck, this.state.clerics, this.state.rogues, this.state.warriors, this.state.wizards, this.state.paragons, this.state.haveclerics, this.state.haverogues, this.state.havewarriors, this.state.havewizards, this.state.haveparagons);\n    var data = partyByDraw.map(row);\n    return <div>\n      <div className=\"form\">\n        <label html-for=\"deck\"> Cards in deck: </label><input className=\"numbox\" type=\"number\" id=\"deck\" name=\"deck\" min=\"0\" defaultValue=\"40\" onChange={this.handleInputChange} />\n        <label html-for=\"clerics\"> Clerics: </label><input className=\"numbox\" type=\"number\" id=\"clerics\" name=\"clerics\" min=\"0\" defaultValue=\"2\" onChange={this.handleInputChange} />\n        <label html-for=\"rogues\"> Rogues: </label><input className=\"numbox\" type=\"number\" id=\"rogues\" name=\"rogues\" min=\"0\" defaultValue=\"3\" onChange={this.handleInputChange} />\n        <label html-for=\"warriors\"> Warriors: </label><input className=\"numbox\" type=\"number\" id=\"warriors\" name=\"warriors\" min=\"0\" defaultValue=\"2\" onChange={this.handleInputChange} />\n        <label html-for=\"wizards\"> Wizards: </label><input className=\"numbox\" type=\"number\" id=\"wizards\" name=\"wizards\" min=\"0\" defaultValue=\"1\" onChange={this.handleInputChange} />\n        <label html-for=\"paragons\"> Paragons: </label><input className=\"numbox\" type=\"number\" id=\"paragons\" name=\"paragons\" min=\"0\" defaultValue=\"0\" onChange={this.handleInputChange} />\n      </div>\n      <BarChart\n              data={data}\n              width={1500}\n              height={400}\n              tooltipHtml={tooltip}\n              tooltipOffset={{top: -50, left: 0}}\n              yAxis={{tickFormat: y => {return \"\"}}}\n              margin={{top: 10, bottom: 50, left: 50, right: 10}}/>\n      <div className=\"legend\">\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#1f77b4\"}} />\n          </svg> = Party of 0\n        </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#aec7e8\"}} />\n          </svg> = Party of 1\n        </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#ff7f0e\"}} />\n          </svg> = Party of 2\n          </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#ffbb78\"}} />\n          </svg> = Party of 3\n          </div>\n        <div className=\"legendEntry\">\n          <svg width=\"20\" height=\"20\">\n            <rect width=\"20\" height=\"20\" style={{fill: \"#2ca02c\"}} />\n          </svg> = Party of 4\n        </div>\n      </div>\n      <div className=\"form bot\">\n        Already Have --\n        <label html-for=\"haveclerics\"> Clerics:</label><input className=\"checkbox\" type=\"checkbox\" id=\"haveclerics\" name=\"haveclerics\" onClick={this.handleClick} />\n        <label html-for=\"haverogues\"> Rogues:</label><input className=\"checkbox\" type=\"checkbox\" id=\"haverogues\" name=\"haverogues\" onClick={this.handleClick} />\n        <label html-for=\"havewarriors\"> Warriors:</label><input className=\"checkbox\" type=\"checkbox\" id=\"havewarriors\" name=\"havewarriors\" onClick={this.handleClick} />\n        <label html-for=\"havewizards\"> Wizards:</label><input className=\"checkbox\" type=\"checkbox\" id=\"havewizards\" name=\"havewizards\" onClick={this.handleClick} />\n        <label html-for=\"haveparagons\"> Paragons: </label><input className=\"numbox\" type=\"number\" id=\"haveparagons\" name=\"haveparagons\" min=\"0\" defaultValue=\"0\" onChange={this.handleInputChange} />\n      </div>\n    </div>;\n  }\n}","import React from 'react';\nimport './App.css';\nimport Odds from './components/Odds';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Odds />\n      </header> \n    </div>\n  );\n        // <label for=\"paragons\"> Paragons: <input class=\"paragons\" type=\"number\" id=\"paragons\" name=\"paragons\" min=\"0\" /></label>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer, {});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","export default function(state = {}, action) {\n  switch(action.type) {    \n  default:\n    return state;\n  }\n}"],"sourceRoot":""}